@use "../10-functions/theme-accessor" as *;
@use "../20-mixins/media-query" as *;

*,
*::before,
*::after {
  margin: 0;
  padding: 0;
  // outline: solid 1px lightpink;
}

// GLOBAL SETTINGS ////////////////////
body {
  // accent-color: get(color, slightly-desaturated-cyan);
  // background: get(color, very-light-grey);
  // color: get(color, medium-grey);
  font-family: get(font-family, base);
  font-size: get(font-size, base);
  font-weight: get(font-weight, base);
  line-height: get(line-height, base);
  letter-spacing: get(letter-spacing, base);
  word-break: break-word;
  font-size-adjust: from-font;
}

// DOCUMENT STRUCTURE ////////////////////
body {
  display: grid;
  grid-template-rows: auto 1fr auto;
}

.site-header,
.site-footer {
  // --space-region: #{get(space, m-xl)};

  nav {
    text-transform: uppercase;

    a {
      text-decoration: none;
      text-underline-offset: 0.1em;
    }

    a:hover,
    a:focus-visible {
      text-decoration: underline;
    }
  }
}

.g-block {
  --space-box: var(--space-region-s) var(--space-s-2xl);
  --box-radius: var(--radius-l);
  --space-flow: 1.5em;

  &::before {
    content: "";
    position: absolute;
    inset: 0;
    background-repeat: no-repeat;
    z-index: -1;
    border-radius: var(--radius-l);
  }
}

// TYPOGRAPHY ////////////////////
h1,
h2,
h3,
h4 {
  font-family: get(font-family, display);
  font-weight: get(font-weight, medium);
  line-height: get(line-height, flat);
  // color: get(color, grayish-dark-blue);
  // text-transform: capitalize;
  text-wrap: balance;
  hyphens: auto;
}

h1 {
  font-size: get(font-size, 5);
  max-inline-size: 25ch;
}

h2 {
  font-size: get(font-size, 4);
}

h3 {
  font-size: get(font-size, 1);
  font-weight: get(font-weight, base);
  text-transform: capitalize;
}

h4,
h5,
h6 {
  // font-size: get(font-size, 3);
}

/* This is quite a new property, so we want code styles to at least, not be huge */
@supports not (font-size-adjust: from-font) {
  :is(code, kbd, samp) {
    font-size: 0.85em;
  }
}

// CONTENT ELEMENTS ////////////////////
// TEXT ELEMENTS
p {
  max-inline-size: var(--measure, 66ch);
  text-wrap: pretty;
}

// .lede {
// font-size: get(font-size, 3);
// letter-spacing: get(letter-spacing, extra-loose);
// text-transform: uppercase;
// color: get(color, strong-blue);
// font-weight: get(font-weight, black);
// }

b {
  // color: get-theme("color", "highlight");
}

// LIST ELEMENTS

// FORM ELEMENTS
form {
  .error {
    position: absolute;
    // color: get(color, bright-red);
    inset-block-end: -1.2lh;
    // font-size: get(font-size, -2);
    // font-weight: get(font-weight, bold);
    font-style: italic;
  }

  :is(.input-valid, #specBoost) {
    // border: solid var(--border-width) get(color, slightly-desaturated-cyan);
  }

  :is(.input-error, #specBoost) {
    // border: solid var(--border-width) get(color, bright-red);
  }
}

// form > * + * {
//   margin-block-start: var(--flow-space, 1em);
// }

// :is(input, select, textarea) {
//   accent-color: var(--color-accent);
// }

input:not([type="checkbox"], [type="radio"], [type="color"]),
select,
textarea {
  padding: 1em;
  border: var(--input-border, solid transparent var(--border-width));
  border-block-end: solid 1px get(color, white);
  border-radius: var(--input-radius, var(--radius));
  background: transparent;
  color: get(color, white);
  inline-size: 100%;

  &::placeholder {
    color: #f3c0b5;
  }
}

input,
label {
  // line-height: get(line-height, flat);
}

label {
  // font-weight: get(font-weight, bold);
  // font-size: get(font-size, -1);
}

// label::after {
//   content: "\A";
//   white-space: pre;
// }

// label:has(input) {
//   display: flex;
//   align-items: flex-start;
//   gap: var(--space-gutter);
// }

// label:has(input) input {
//   transform: translateY(0.25ex);
// }

// label:has(input) + label:has(input) {
//   --flow-space: var(--space-m);
//   margin-block-start: var(--space-m);
// }

// MEDIA ELEMENTS

// IMAGE & SVG ELEMENTS
svg:not([class]) {
  inline-size: auto;
  block-size: 1lh;
}

// TABLE ELEMENTS
table {
  inline-size: 100%;
  border-collapse: collapse;
  border: none;
}

// INTERACTIVE ELEMENTS ////////////////////
// A ELEMENT SPECIFICS
a {
  display: inline-block;

  &:hover,
  &:focus-visible {
    text-decoration: none;
  }

  &[aria-current="page"] {
    // color: get(color, slightly-desaturated-cyan);
    // pointer-events: none;

    &:hover,
    &:focus-visible {
      text-decoration: none;
    }
  }
}

// BUTTON STYLES

// INTERACTIVE STATES ////////////////////
// FOCUS
// Favour focus-visible over focus so click events don't trigger focus styles
:focus {
  outline: none;
}

:focus-visible {
  outline: 2px solid var(--focus-color, currentColor);
  outline-offset: var(--focus-offset, 0.2lh);
}

// Firefox requires display: inline-block for full element outline.
// To avoid flow issues, we detect Firefox and reduce focus offset.
@supports (-moz-appearance: none) {
  :root {
    --focus-offset: 0.08em;
  }
}

// SELECTION
::selection {
  // color: get-theme("color", "bold");
  // background: get-color("core", "primary");
}

// TARGET
:target {
  // scroll-margin-block: max(2ex, 5lh);
}

// INTERFACE ELEMENTS ////////////////////
// SKIP LINK

// SCROLLBAR ////////////////////
